@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <title>Reading Bus Times</title>
</head>
<body>
    <h2>
        Routes
    </h2>
    <div>
        <select data-bind="options: routes,
                            value: selectedRoute,
                            optionsCaption: 'Choose...'" autofocus></select>
        @*<p data-bind="text: selectedRoute() ? selectedRoute() : 'unknown' ">
        </p>*@
    </div>
    <div data-bind="if: selectedRoute()">
        <div data-bind="if: !locker()">
            <h2>
                Departures
            </h2>
            <p>Route: <span data-bind="text: departureRoute"></span></p>
            <p>Updated: <span data-bind="text: lastUpdated"></span></p>
            <table>
                <thead>
                    <tr>
                        <th>Departs</th>
                        <th>Service</th>
                        <th>Stop</th>
                        <th>Destination</th>
                        <th>Reachable</th>
                    </tr>
                </thead>
                <tbody data-bind="foreach: departures">
                    <tr>
                        <td data-bind="text: DepartsIn"></td>
                        <td data-bind="text: Service"></td>
                        <td data-bind="text: BusStop"></td>
                        <td data-bind="text: Destination"></td>
                        <td data-bind="text: Reachable"></td>
                    </tr>
                </tbody>
            </table>
        </div>
        <div data-bind="if: locker()">
            Loading...
        </div>
    </div>
    @Scripts.Render("~/bundles/knockoutjs")
    <script>
        (function ($, ko) {

            function BusDepartureViewModel() {
                // Data
                var self = this;
                context = self;
                self.locker = ko.observable(false);

                self.routes = ko.observableArray([]);
                self.selectedRoute = ko.observable();
                self.departures = ko.observableArray([]);

                self.addRoute = function (name) {
                    self.routes.push(name);
                };
                self.addDeparture = function (departsIn, service, busStop, destination, reachable) {
                    self.departures.push({ DepartsIn: departsIn, Service: service, BusStop: busStop, Destination: destination, Reachable: reachable });
                };

                self.getDepartures = function (route) {
                    self.departures = ko.observableArray();
                    if (route) {
                        self = this;
                        context.locker(true); //lock list 
                        var jqxhr = $.getJSON("DeparturesJson", { routeName: route }, function (data) {
                            console.log("done");
                        })
                        .done(function (data) {
                            $.each(data.Departures, function (key, value) {
                                model.addDeparture(value.DepartsIn, value.Service, value.BusStop, value.Destination, value.Reachable);
                            });
                            self.lastUpdated(data.Timestamp);
                            self.departureRoute(data.Route);
                        })
                        .fail(function () {
                            console.log("fail");
                        })
                        .always(function () {
                            context.locker(false);  //unlock list
                        });
                    }
                };
                /// The route name for the displayed departures
                self.departureRoute = ko.observable('');
                /// The server time the departures were last updated
                self.lastUpdated = ko.observable('');

                self.itemsTrigger = ko.computed(function () {
                    return self.getDepartures(self.selectedRoute());
                }, this);
            }

            var model = new BusDepartureViewModel();
            ko.applyBindings(model);

            var jqxhr = $.getJSON("RoutesJson", function (data) {
                console.log("done");
            })
            .done(function (data) {
                $.each(data.Routes, function (key, value) {
                    model.addRoute(value);
                });
                model.selectedRoute("");
            })
            .done(function (data) {
                //model.addDeparture("one", "two", "three", "four", "five");
            })
            .fail(function () {
                console.log('fail');
            });
        })($, ko);
    </script>
</body>
</html>
